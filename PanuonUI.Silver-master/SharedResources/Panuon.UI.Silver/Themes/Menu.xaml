<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Resource.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Themes/ScrollViewer.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Themes/CheckBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="SnapsToDevicePixels"
                Value="{StaticResource Default_SnapsToDevicePixels}" />
        <Setter Property="FontSize"
                Value="{StaticResource Default_FontSize}" />
        <Setter Property="Width"
                Value="200" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="local:MenuHelper.HoverBackground"
                Value="#EEEEEE" />
        <Setter Property="local:MenuHelper.ShadowColor"
                Value="#DDDDDD" />
        <Setter Property="Foreground"
                Value="#3E3E3E" />
        <Setter Property="local:MenuHelper.SubmenuItemHeight"
                Value="35" />
        <Setter Property="local:MenuHelper.SubmenuWidth"
                Value="250" />
        <Setter Property="local:IconHelper.FontSize"
                Value="{Binding FontSize, Converter={StaticResource Add3Converter},RelativeSource={RelativeSource Self},Mode=OneWay}" />
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Foreground,RelativeSource={RelativeSource Self},Mode=OneWay}" />
        <Setter Property="local:IconHelper.Width"
                Value="40" />
        <Setter Property="local:IconHelper.FontFamily"
                Value="/Panuon.UI.Silver;component/Resources/#fontawesome" />
        <Setter Property="local:ScrollViewerHelper.ScrollBarThickness"
                Value="6" />
        <Setter Property="local:ScrollViewerHelper.ScrollBarCornerRadius"
                Value="3" />
        <Setter Property="local:MenuHelper.SubmenuCornerRadius"
                Value="0" />
        <Setter Property="local:MenuHelper.CheckableCheckboxStyle">
            <Setter.Value>
                <Style TargetType="{x:Type CheckBox}"
                       BasedOn="{StaticResource {x:Type CheckBox}}">
                    <Setter Property="local:CheckBoxHelper.CheckBoxStyle"
                            Value="Switch" />
                    <Setter Property="HorizontalAlignment"
                            Value="Right" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=(local:CheckBoxHelper.CheckBoxStyle),RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                     Value="Switch">
                            <Setter Property="local:CheckBoxHelper.BoxWidth"
                                    Value="32" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid>
                        <Border x:Name="BdrMain"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <ScrollViewer local:ScrollViewerHelper.ScrollBarThickness="{Binding Path=(local:ScrollViewerHelper.ScrollBarThickness),RelativeSource={RelativeSource Self},Mode=OneWay}"
                                      local:ScrollViewerHelper.ScrollBarCornerRadius="{Binding Path=(local:ScrollViewerHelper.ScrollBarCornerRadius),RelativeSource={RelativeSource Self},Mode=OneWay}">
                            <StackPanel IsItemsHost="True"
                                        Orientation="{Binding Path=(local:MenuHelper.Orientation),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(local:MenuHelper.MenuStyle), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                         Value="Modern">
                <Setter Property="local:MenuHelper.HoverForeground"
                        Value="#000000" />
            </DataTrigger>
            <Trigger  Property="IsEnabled"
                      Value="False">
                <Setter Property="Opacity"
                        Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="{StaticResource Default_SnapsToDevicePixels}" />
        <Setter Property="FontSize"
                Value="{StaticResource Default_FontSize}" />
        <Setter Property="Padding"
                Value="{Binding Path=(local:MenuHelper.ItemPadding),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}" />
        <Setter Property="local:MenuHelper.HoverBackground"
                Value="#EEEEEE" />
        <Setter Property="local:MenuHelper.ShadowColor"
                Value="#DDDDDD" />
        <Setter Property="local:IconHelper.Width"
                Value="{Binding Path=(local:IconHelper.Width),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}" />
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}" />
        <Setter Property="local:IconHelper.FontSize"
                Value="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}" />
        <Setter Property="local:IconHelper.FontFamily"
                Value="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}" />
        <Setter Property="local:MenuHelper.CheckableCheckboxStyle"
                Value="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}" />
        <Style.Triggers>
            <!--Vertical / Standard-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:MenuHelper.Orientation),RelativeSource={RelativeSource AncestorType=Menu}}"
                               Value="Vertical" />
                    <Condition Binding="{Binding Path=(local:MenuHelper.MenuStyle),RelativeSource={RelativeSource AncestorType=Menu}}"
                               Value="Standard" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" />
                                <Border x:Name="BdrHover"
                                        BorderBrush="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{Binding Path=(local:MenuHelper.HoverBackground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}"
                                        Opacity="0" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{Binding Path=(local:IconHelper.Width),Converter={StaticResource GridLengthConverter},RelativeSource={RelativeSource AncestorType=MenuItem}}" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIcon"
                                           Padding="10,0,7,0"
                                           Content="{Binding Icon,Converter={StaticResource IconConverter},RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           Foreground="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           FontSize="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           FontFamily="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           VerticalContentAlignment="Center"
                                           HorizontalContentAlignment="Center" />
                                    <CheckBox x:Name="ChbCheckable"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding IsChecked,RelativeSource={RelativeSource AncestorType=MenuItem},Mode=TwoWay}"
                                              Style="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                              Visibility="Collapsed" />
                                    <ContentPresenter x:Name="Presenter"
                                                      ContentSource="Header"
                                                      Grid.Column="1"
                                                      VerticalAlignment="Center"
                                                      Margin="{TemplateBinding Padding}" />
                                    <Path x:Name="Path"
                                          Grid.Column="2"
                                          Width="5"
                                          Height="10"
                                          Data="M0,0 L5,5 L0,10"
                                          Margin="10,0,10,0"
                                          RenderTransformOrigin="0.5,0.5"
                                          HorizontalAlignment="Right"
                                          Stroke="{TemplateBinding Foreground}"
                                          Visibility="Collapsed">
                                    </Path>
                                </Grid>
                                <Popup x:Name="Popup"
                                       Placement="Right"
                                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       PopupAnimation="Fade">
                                    <Grid Width="{Binding Path=(local:MenuHelper.SubmenuWidth),RelativeSource={RelativeSource AncestorType=Menu}}"
                                          Margin="10">
                                        <Border x:Name="BdrSubmenu"
                                                SnapsToDevicePixels="True"
                                                BorderThickness="{Binding BorderThickness,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                BorderBrush="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                Background="{Binding Background,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                CornerRadius="{Binding Path=(local:MenuHelper.SubmenuCornerRadius),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}">
                                            <Border.Effect>
                                                <DropShadowEffect ShadowDepth="0"
                                                                  BlurRadius="10"
                                                                  Opacity="1"
                                                                  Color="{Binding Path=(local:MenuHelper.ShadowColor),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay, Converter={StaticResource NullableColorToColoConverter}}" />
                                            </Border.Effect>
                                        </Border>
                                        <ScrollViewer local:ScrollViewerHelper.ScrollBarThickness="{Binding Path=(local:ScrollViewerHelper.ScrollBarThickness),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}"
                                                      local:ScrollViewerHelper.ScrollBarCornerRadius="{Binding Path=(local:ScrollViewerHelper.ScrollBarCornerRadius),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}"
                                                      Margin="{Binding Padding,RelativeSource={RelativeSource AncestorType=Menu}}">
                                            <StackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </ScrollViewer>
                                    </Grid>

                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding Path=(local:MenuHelper.HoverForeground), RelativeSource={RelativeSource AncestorType=Menu},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource  AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="LblIcon"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Path"
                                            Property="Stroke"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <DataTrigger Binding="{Binding Path=(local:MenuHelper.ShadowColor),RelativeSource={RelativeSource AncestorType=Menu}}"
                                             Value="{x:Null}">
                                    <Setter TargetName="BdrSubmenu"
                                            Property="Effect"
                                            Value="{x:Null}" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                        <Condition Binding="{Binding IsCheckable,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ChbCheckable"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="LblIcon"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding IsChecked,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="Content"
                                            Value="&#xf00c;" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <!--Horizontal / Standard / TopLevelItem-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:MenuHelper.Orientation),RelativeSource={RelativeSource AncestorType=Menu}}"
                               Value="Horizontal" />
                    <Condition Binding="{Binding Path=(local:MenuHelper.MenuStyle),RelativeSource={RelativeSource AncestorType=Menu}}"
                               Value="Standard" />
                    <Condition Binding="{Binding Role,RelativeSource={RelativeSource Self}}"
                               Value="TopLevelItem" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" />
                                <Border x:Name="BdrHover"
                                        BorderBrush="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{Binding Path=(local:MenuHelper.HoverBackground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}"
                                        Opacity="0" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIcon"
                                           Padding="10,0,7,0"
                                           Content="{Binding Icon,Converter={StaticResource IconConverter},RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           Foreground="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           FontSize="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           FontFamily="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           VerticalContentAlignment="Center"
                                           HorizontalContentAlignment="Center" />
                                    <CheckBox x:Name="ChbCheckable"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding IsChecked,RelativeSource={RelativeSource AncestorType=MenuItem},Mode=TwoWay}"
                                              Style="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                              Visibility="Collapsed" />
                                    <ContentPresenter x:Name="Presenter"
                                                      ContentSource="Header"
                                                      Grid.Column="1"
                                                      VerticalAlignment="Center"
                                                      Margin="{TemplateBinding Padding}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding Path=(local:MenuHelper.HoverForeground), RelativeSource={RelativeSource AncestorType=Menu},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource  AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="LblIcon"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                        <Condition Binding="{Binding IsCheckable,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ChbCheckable"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="LblIcon"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding IsChecked,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="Content"
                                            Value="&#xf00c;" />
                                </MultiDataTrigger>

                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <!--Horizontal / Standard / TopLevelHeader-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:MenuHelper.Orientation),RelativeSource={RelativeSource AncestorType=Menu}}"
                               Value="Horizontal" />
                    <Condition Binding="{Binding Path=(local:MenuHelper.MenuStyle),RelativeSource={RelativeSource AncestorType=Menu}}"
                               Value="Standard" />
                    <Condition Binding="{Binding Role,RelativeSource={RelativeSource Self}}"
                               Value="TopLevelHeader" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" />
                                <Border x:Name="BdrHover"
                                        BorderBrush="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{Binding Path=(local:MenuHelper.HoverBackground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}"
                                        Opacity="0" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIcon"
                                           Padding="10,0,7,0"
                                           Content="{Binding Icon,Converter={StaticResource IconConverter},RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           Foreground="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           FontSize="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           FontFamily="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           VerticalContentAlignment="Center"
                                           HorizontalContentAlignment="Center" />
                                    <CheckBox x:Name="ChbCheckable"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding IsChecked,RelativeSource={RelativeSource AncestorType=MenuItem},Mode=TwoWay}"
                                              Style="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                              Visibility="Collapsed" />
                                    <ContentPresenter x:Name="Presenter"
                                                      ContentSource="Header"
                                                      Grid.Column="1"
                                                      VerticalAlignment="Center"
                                                      Margin="{TemplateBinding Padding}" />
                                    <Path x:Name="Path"
                                          Grid.Column="2"
                                          Width="10"
                                          Height="10"
                                          Data="M0,3 L5,8 L10,3"
                                          Margin="10,0,10,0"
                                          RenderTransformOrigin="0.5,0.5"
                                          HorizontalAlignment="Right"
                                          Stroke="{TemplateBinding Foreground}">
                                    </Path>
                                </Grid>
                                <Popup x:Name="Popup"
                                       Placement="Bottom"
                                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       PopupAnimation="Fade">
                                    <Grid Margin="10"
                                          Width="{Binding Path=(local:MenuHelper.SubmenuWidth),RelativeSource={RelativeSource AncestorType=Menu}}">
                                        <Border x:Name="BdrSubmenu"
                                                SnapsToDevicePixels="True"
                                                BorderThickness="{Binding BorderThickness,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                BorderBrush="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                Background="{Binding Background,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                CornerRadius="{Binding Path=(local:MenuHelper.SubmenuCornerRadius),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}">
                                            <Border.Effect>
                                                <DropShadowEffect ShadowDepth="0"
                                                                  BlurRadius="10"
                                                                  Opacity="1"
                                                                  Color="{Binding Path=(local:MenuHelper.ShadowColor),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay, Converter={StaticResource NullableColorToColoConverter}}" />
                                            </Border.Effect>
                                        </Border>
                                        <ScrollViewer local:ScrollViewerHelper.ScrollBarThickness="{Binding Path=(local:ScrollViewerHelper.ScrollBarThickness),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}"
                                                      local:ScrollViewerHelper.ScrollBarCornerRadius="{Binding Path=(local:ScrollViewerHelper.ScrollBarCornerRadius),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}"
                                                      Margin="{Binding Padding,RelativeSource={RelativeSource AncestorType=Menu}}">
                                            <StackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </ScrollViewer>
                                    </Grid>

                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding Path=(local:MenuHelper.HoverForeground), RelativeSource={RelativeSource AncestorType=Menu},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource  AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="LblIcon"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Path"
                                            Property="Stroke"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <DataTrigger Binding="{Binding Path=(local:MenuHelper.ShadowColor),RelativeSource={RelativeSource AncestorType=Menu}}"
                                             Value="{x:Null}">
                                    <Setter TargetName="BdrSubmenu"
                                            Property="Effect"
                                            Value="{x:Null}" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                        <Condition Binding="{Binding IsCheckable,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ChbCheckable"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="LblIcon"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding IsChecked,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="Content"
                                            Value="&#xf00c;" />
                                </MultiDataTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <!--Horizontal / SubmenuItem-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:MenuHelper.Orientation),RelativeSource={RelativeSource AncestorType=Menu}}"
                               Value="Horizontal" />
                    <Condition Binding="{Binding Role,RelativeSource={RelativeSource Self}}"
                               Value="SubmenuItem" />
                </MultiDataTrigger.Conditions>
                <Setter  Property="Height"
                         Value="{Binding Path=(local:MenuHelper.SubmenuItemHeight),RelativeSource={RelativeSource AncestorType=Menu}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" />
                                <Border x:Name="BdrHover"
                                        BorderBrush="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{Binding Path=(local:MenuHelper.HoverBackground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}"
                                        Opacity="0" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{Binding Path=(local:IconHelper.Width),Converter={StaticResource GridLengthConverter},RelativeSource={RelativeSource AncestorType=MenuItem}}" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIcon"
                                           Padding="10,0,7,0"
                                           Content="{Binding Icon,Converter={StaticResource IconConverter},RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           Foreground="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           FontSize="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           FontFamily="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           VerticalContentAlignment="Center"
                                           HorizontalContentAlignment="Center" />
                                    <CheckBox x:Name="ChbCheckable"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding IsChecked,RelativeSource={RelativeSource AncestorType=MenuItem},Mode=TwoWay}"
                                              Style="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                              Visibility="Collapsed" />
                                    <ContentPresenter x:Name="Presenter"
                                                      ContentSource="Header"
                                                      Grid.Column="1"
                                                      VerticalAlignment="Center"
                                                      Margin="{TemplateBinding Padding}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding Path=(local:MenuHelper.HoverForeground), RelativeSource={RelativeSource AncestorType=Menu},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="LblIcon"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                        <Condition Binding="{Binding IsCheckable,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ChbCheckable"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="LblIcon"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding IsChecked,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="Content"
                                            Value="&#xf00c;" />
                                </MultiDataTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <!--Horizontal / SubmenuHeader-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:MenuHelper.Orientation),RelativeSource={RelativeSource AncestorType=Menu}}"
                               Value="Horizontal" />
                    <Condition Binding="{Binding Role,RelativeSource={RelativeSource Self}}"
                               Value="SubmenuHeader" />
                </MultiDataTrigger.Conditions>
                <Setter  Property="Height"
                         Value="{Binding Path=(local:MenuHelper.SubmenuItemHeight),RelativeSource={RelativeSource AncestorType=Menu}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" />
                                <Border x:Name="BdrHover"
                                        BorderBrush="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{Binding Path=(local:MenuHelper.HoverBackground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}"
                                        Opacity="0" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{Binding Path=(local:IconHelper.Width),Converter={StaticResource GridLengthConverter},RelativeSource={RelativeSource AncestorType=MenuItem}}" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIcon"
                                           Padding="10,0,7,0"
                                           Content="{Binding Icon,Converter={StaticResource IconConverter},RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           Foreground="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           FontSize="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           FontFamily="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           VerticalContentAlignment="Center"
                                           HorizontalContentAlignment="Center"/>
                                    <CheckBox x:Name="ChbCheckable"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding IsChecked,RelativeSource={RelativeSource AncestorType=MenuItem},Mode=TwoWay}"
                                              Style="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                              Visibility="Collapsed" />
                                    <ContentPresenter x:Name="Presenter"
                                                      ContentSource="Header"
                                                      Grid.Column="1"
                                                      VerticalAlignment="Center"
                                                      Margin="{TemplateBinding Padding}" />
                                    <Path x:Name="Path"
                                          Grid.Column="3"
                                          Width="5"
                                          Height="10"
                                          Data="M0,0 L5,5 L0,10"
                                          Margin="0,0,15,0"
                                          RenderTransformOrigin="0.5,0.5"
                                          HorizontalAlignment="Right"
                                          Stroke="{TemplateBinding Foreground}"
                                          Visibility="Collapsed">
                                    </Path>
                                </Grid>
                                <Popup x:Name="Popup"
                                       Placement="Right"
                                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       PopupAnimation="Fade">
                                    <Grid Margin="10">
                                        <Border x:Name="BdrSubmenu"
                                                SnapsToDevicePixels="True"
                                                BorderThickness="{Binding BorderThickness,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                BorderBrush="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                Background="{Binding Background,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                Width="{Binding Width,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                CornerRadius="{Binding Path=(local:MenuHelper.SubmenuCornerRadius),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}">
                                            <Border.Effect>
                                                <DropShadowEffect ShadowDepth="0"
                                                                  BlurRadius="10"
                                                                  Opacity="1"
                                                                  Color="{Binding Path=(local:MenuHelper.ShadowColor),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay, Converter={StaticResource NullableColorToColoConverter}}" />
                                            </Border.Effect>
                                        </Border>
                                        <ScrollViewer local:ScrollViewerHelper.ScrollBarThickness="{Binding Path=(local:ScrollViewerHelper.ScrollBarThickness),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}"
                                                      local:ScrollViewerHelper.ScrollBarCornerRadius="{Binding Path=(local:ScrollViewerHelper.ScrollBarCornerRadius),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}"
                                                      Margin="{Binding Padding,RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}">
                                            <StackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </ScrollViewer>
                                    </Grid>

                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding Path=(local:MenuHelper.HoverForeground), RelativeSource={RelativeSource AncestorType=Menu},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="LblIcon"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Path"
                                            Property="Stroke"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BdrHover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                        <Condition Binding="{Binding IsCheckable,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ChbCheckable"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="LblIcon"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding IsChecked,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="Content"
                                            Value="&#xf00c;" />
                                </MultiDataTrigger>

                                <Trigger Property="HasItems"
                                         Value="True">
                                    <Setter TargetName="Path"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                                <DataTrigger Binding="{Binding Path=(local:MenuHelper.ShadowColor),RelativeSource={RelativeSource AncestorType=Menu}}"
                                             Value="{x:Null}">
                                    <Setter TargetName="BdrSubmenu"
                                            Property="Effect"
                                            Value="{x:Null}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <!--Horizontal / Modern / TopLevelItem-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:MenuHelper.Orientation),RelativeSource={RelativeSource AncestorType=Menu}}"
                               Value="Horizontal" />
                    <Condition Binding="{Binding Path=(local:MenuHelper.MenuStyle),RelativeSource={RelativeSource AncestorType=Menu}}"
                               Value="Modern" />
                    <Condition Binding="{Binding Role,RelativeSource={RelativeSource Self}}"
                               Value="TopLevelItem" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Label x:Name="LblIcon"
                                       Padding="10,0,7,0"
                                       Content="{Binding Icon,Converter={StaticResource IconConverter},RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                       Foreground="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                       FontSize="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                       FontFamily="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Center" />
                                <CheckBox x:Name="ChbCheckable"
                                          VerticalAlignment="Center"
                                          IsChecked="{Binding IsChecked,RelativeSource={RelativeSource AncestorType=MenuItem},Mode=TwoWay}"
                                          Style="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                          Visibility="Collapsed" />
                                <ContentPresenter x:Name="Presenter"
                                                  ContentSource="Header"
                                                  Grid.Column="1"
                                                  VerticalAlignment="Center"
                                                  Margin="{TemplateBinding Padding}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                        <Condition Binding="{Binding IsCheckable,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ChbCheckable"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="LblIcon"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding IsChecked,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="Content"
                                            Value="&#xf00c;" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding Path=(local:MenuHelper.HoverForeground), RelativeSource={RelativeSource AncestorType=Menu},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource  AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="LblIcon"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <!--Horizontal / Modern / TopLevelHeader-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:MenuHelper.Orientation),RelativeSource={RelativeSource AncestorType=Menu}}"
                               Value="Horizontal" />
                    <Condition Binding="{Binding Path=(local:MenuHelper.MenuStyle),RelativeSource={RelativeSource AncestorType=Menu}}"
                               Value="Modern" />
                    <Condition Binding="{Binding Role,RelativeSource={RelativeSource Self}}"
                               Value="TopLevelHeader" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LblIcon"
                                           Padding="10,0,7,0"
                                           Content="{Binding Icon,Converter={StaticResource IconConverter},RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           Foreground="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           FontSize="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           FontFamily="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                           VerticalContentAlignment="Center"
                                           HorizontalContentAlignment="Center" />
                                    <CheckBox x:Name="ChbCheckable"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding IsChecked,RelativeSource={RelativeSource AncestorType=MenuItem},Mode=TwoWay}"
                                              Style="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                              Visibility="Collapsed" />
                                    <ContentPresenter x:Name="Presenter"
                                                      ContentSource="Header"
                                                      Grid.Column="1"
                                                      VerticalAlignment="Center"
                                                      Margin="{TemplateBinding Padding}" />
                                </Grid>
                                <Popup x:Name="Popup"
                                       Placement="Bottom"
                                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       PopupAnimation="Fade">
                                    <Grid Margin="10"
                                          Width="{Binding Path=(local:MenuHelper.SubmenuWidth),RelativeSource={RelativeSource AncestorType=Menu}}">
                                        <Border x:Name="BdrSubmenu"
                                                SnapsToDevicePixels="True"
                                                BorderThickness="{Binding BorderThickness,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                BorderBrush="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                Background="{Binding Background,RelativeSource={RelativeSource AncestorType=Menu}}"
                                                CornerRadius="{Binding Path=(local:MenuHelper.SubmenuCornerRadius),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}">
                                            <Border.Effect>
                                                <DropShadowEffect ShadowDepth="0"
                                                                  BlurRadius="10"
                                                                  Opacity="1"
                                                                  Color="{Binding Path=(local:MenuHelper.ShadowColor),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay, Converter={StaticResource NullableColorToColoConverter}}" />
                                            </Border.Effect>
                                        </Border>
                                        <ScrollViewer local:ScrollViewerHelper.ScrollBarThickness="{Binding Path=(local:ScrollViewerHelper.ScrollBarThickness),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}"
                                                      local:ScrollViewerHelper.ScrollBarCornerRadius="{Binding Path=(local:ScrollViewerHelper.ScrollBarCornerRadius),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}"
                                                      Margin="{Binding Padding,RelativeSource={RelativeSource AncestorType=Menu}}">
                                            <StackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </ScrollViewer>
                                    </Grid>

                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                        <Condition Binding="{Binding IsCheckable,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ChbCheckable"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="LblIcon"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(local:MenuHelper.CheckableCheckboxStyle),RelativeSource={RelativeSource Self},Converter={StaticResource IsNullConverter}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding IsChecked,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="Content"
                                            Value="&#xf00c;" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                        <Condition Binding="{Binding Path=(local:MenuHelper.HoverForeground), RelativeSource={RelativeSource AncestorType=Menu},Converter={StaticResource IsNullConverter}}"
                                                   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="LblIcon"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource  AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="LblIcon"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextBlock.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                    <Setter TargetName="Presenter"
                                            Property="TextElement.Foreground"
                                            Value="{Binding Path=(local:MenuHelper.HoverForeground),RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding Path=(local:MenuHelper.ShadowColor),RelativeSource={RelativeSource AncestorType=Menu}}"
                                             Value="{x:Null}">
                                    <Setter TargetName="BdrSubmenu"
                                            Property="Effect"
                                            Value="{x:Null}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <Trigger  Property="IsEnabled"
                      Value="False">
                <Setter Property="Opacity"
                        Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuItem_NonStyle"
           TargetType="{x:Type MenuItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="{StaticResource Default_SnapsToDevicePixels}" />
        <Setter Property="FontSize"
                Value="{StaticResource Default_FontSize}" />
        <Setter Property="Padding"
                Value="{Binding Path=(local:MenuHelper.ItemPadding),RelativeSource={RelativeSource AncestorType=Menu},Mode=OneWay}" />
        <Setter Property="Height"
                Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Margin="1">
                        <ContentPresenter x:Name="Presenter"
                                          ContentSource="Header"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger  Property="IsEnabled"
                      Value="False">
                <Setter Property="Opacity"
                        Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="BorderBrush"
                Value="#EEEEEE" />
        <Setter Property="BorderThickness"
                Value="0,0,0,1" />
        <Setter Property="Margin"
                Value="1,5" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Height="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>